{"version":3,"file":"main.6f1d3050f2581e53de02.hot-update.js","sources":["webpack:///./src/components/Header/index.tsx","webpack:///./src/components/Header/mock.ts","webpack:///./src/components/Header/stories.tsx","webpack:///./src/components/Header/styles.ts","webpack:///./src/components/LogoLink/index.tsx","webpack:///./src/components/LogoLink/stories.tsx"],"sourcesContent":["\r\nimport * as Styled from './styles';\r\nimport { Heading } from '../Heading';\r\nimport LogoLink from '../LogoLink';\r\n\r\n\r\nexport type HeaderProps = {\r\n  blogName: string;\r\n  description:string;\r\n  logo: string;\r\n  showText?:boolean;\r\n};\r\n\r\nexport const Header = ({\r\n  blogName,\r\n  description,\r\n  logo,\r\n  showText = false,\r\n\r\n}: HeaderProps) => {\r\n\r\n    return (\r\n        <Styled.Wrapper>\r\n          <LogoLink link=\"/\" srcImg={logo} text={`${blogName} -${description}`}/>\r\n          {showText && (\r\n            <Styled.Content>\r\n              <Heading size=\"small\" as=\"h2\" colorDark={true}>\r\n                {blogName}\r\n              </Heading>\r\n            </Styled.Content>\r\n          )}\r\n        </Styled.Wrapper>\r\n    );\r\n  };\r\n","import {HeaderProps} from '.';\r\n\r\nexport default {\r\n  blogName: 'Nanaverso',\r\n  description: 'Lorem ipsum dolor sit amet, Ut enim ad minim veniam, quis nostrud.',\r\n  logo:'/assets/images/social-share.jpg',\r\n  showText: true,\r\n};\r\n","import { Meta, Story } from '@storybook/react/types-6-0';\r\nimport { Header, HeaderProps } from '.';\r\nimport mock from './mock';\r\n\r\nexport default {\r\n  title: 'Header',\r\n  component: Header,\r\n  args: mock,\r\n} as Meta<HeaderProps>;\r\n\r\nexport const Template: Story<HeaderProps> = (args) => {\r\n  return (\r\n    <div>\r\n      <Header {...args} />\r\n    </div>\r\n  );\r\n};\r\n","import {Title as HeadingStyles} from '../Heading/styles';\r\nimport styled, { css } from 'styled-components';\r\n\r\nexport const Wrapper = styled.header`\r\n  ${({theme})=> css`\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding-bottom: ${theme.spacings.xhuge};\r\n      width: 100%;\r\n      max-width: ${theme.sizes.max};\r\n      color: ${theme.font.sizes.small};\r\n      font-size: ${theme.font.sizes.small};\r\n      margin: 0 auto;\r\n\r\n      ${HeadingStyles}{\r\n        margin: 0 0 calc(${theme.spacings.small} -1rem);\r\n      }\r\n  `}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${({ theme }) => css`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    margin-left: ${theme.spacings.large};\r\n    max-width: 48rem;\r\n\r\n  `}\r\n`;\r\n","import * as Styled from './styles';\nimport { Heading } from '../Heading';\nimport Link from 'next/link';\n\nexport type LogoLinkProps = {\n  text: string;\n  srcImg?: string;\n  link: string;\n  newTab?: boolean;\n};\n\nexport const LogoLink = ({\n  text,\n  srcImg = '',\n  link,\n  newTab = false,\n}: LogoLinkProps) => {\n  const nextLink = link.match(/^\\//) ? true : false;\n  const target = newTab ? '_blank' : '_self';\n\n  if (nextLink) {\n    return (\n      <Heading size=\"small\" uppercase>\n        <Link href={link} passHref>\n          <Styled.Container target={target}>\n            {!!srcImg && <img src={srcImg} alt={text} />}\n            {!srcImg && text}\n          </Styled.Container>\n        </Link>\n      </Heading>\n    );\n  }\n\n  return (\n    <Heading size=\"small\" uppercase>\n      <Styled.Container href={link} target={target}>\n        {!!srcImg && <img src={srcImg} alt={text} />}\n        {!srcImg && text}\n      </Styled.Container>\n    </Heading>\n  );\n};\n","import { Meta, Story } from '@storybook/react/types-6-0';\nimport { LogoLink, LogoLinkProps } from '.';\n\nexport default {\n  title: 'LogoLink',\n  component: LogoLink,\n  args: {\n    text: 'LogoLink',\n    srcImg: 'assets/images/social-share.jpg',\n    link: 'http://localhost',\n  },\n} as Meta;\n\nexport const ImageOnly: Story<LogoLinkProps> = (args) => {\n  return (\n    <div>\n      <LogoLink {...args} />\n    </div>\n  );\n};\n\nexport const TextOnly: Story<LogoLinkProps> = (args) => {\n  return (\n    <div>\n      <LogoLink {...args} />\n    </div>\n  );\n};\n\nTextOnly.args = {\n  srcImg: '',\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;;;AAUA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAWA;AApBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAIA;AANA;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;;;AASA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AADA;AADA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AADA;AAOA;AA9BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AAUA;AACA;AACA;AAAA;AAIA;AANA;AAQA;AACA;AACA;AAAA;AAIA;AANA;AAQA;AACA;AADA;;;;A","sourceRoot":""}