{"version":3,"file":"main.b8a50bdb48a2e6298e52.hot-update.js","sources":["webpack:///./src/components/Footer/index.tsx","webpack:///./src/components/Header/index.tsx","webpack:///./src/components/Heading/index.tsx","webpack:///./src/components/Heading/stories.tsx","webpack:///./src/components/HtmlContent/index.tsx","webpack:///./src/components/HtmlContent/stories.tsx","webpack:///./src/components/LogoLink/index.tsx"],"sourcesContent":["import * as Styled from './styles';\nimport { HtmlComponent } from '../HtmlContent';\n\nexport type FooterProps = {\n  html: string;\n};\n\nexport const Footer = ({ html }: FooterProps) => {\n  return (\n    <Styled.Container>\n        <HtmlComponent html={html} />\n    </Styled.Container>\n  );\n};\n","\r\nimport * as Styled from './styles';\r\nimport { Heading } from '../Heading';\r\nimport Link from 'next/link';\r\nimport { HtmlContent } from '../HtmlContent';\r\n\r\nexport type HeaderProps = {\r\n  title?: string;\r\n  content?:string;\r\n  srcImg?: string;\r\n  altText: string;\r\n  newTab: boolean;\r\n};\r\n\r\nexport const Header = ({\r\n  title,\r\n  content='',\r\n  srcImg = '',\r\n  altText,\r\n  newTab = false,\r\n\r\n}: HeaderProps) => {\r\n  const target = newTab ? '_blank' : '_self';\r\n\r\n  if (title) {\r\n    return (\r\n\r\n          <Styled.Container target={target}>\r\n            {!!srcImg && <img src={srcImg} alt={altText} />}\r\n            <Heading size=\"big\" uppercase>\r\n            {title}\r\n            </Heading>\r\n            <HtmlContent html={content} />\r\n          </Styled.Container>\r\n\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Heading size=\"small\" uppercase>\r\n      <Styled.Container target={target}>\r\n        {!!srcImg && <img src={srcImg} alt={altText} />}\r\n      </Styled.Container>\r\n    </Heading>\r\n  );\r\n};\r\n","import * as Styled from './styles';\n\nexport type HeadingProps = {\n  children: React.ReactNode;\n  colorDark?: boolean;\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  size?: 'small' | 'medium' | 'big' | 'huge';\n  uppercase?: boolean;\n};\n\nexport const Heading = ({\n  children,\n  colorDark = true,\n  as = 'h1',\n  size = 'huge',\n  uppercase = false,\n}: HeadingProps) => {\n  return (\n    <Styled.Title\n      colorDark={colorDark}\n      as={as}\n      size={size}\n      uppercase={uppercase}\n    >\n      {children}\n    </Styled.Title>\n  );\n};\n","import { Meta, Story } from '@storybook/react/types-6-0';\nimport { Heading, HeadingProps } from '.';\n\nexport default {\n  title: 'Heading',\n  component: Heading,\n  args: {\n    children: 'O texto está escuro',\n  },\n  argTypes: {\n    children: { type: 'string' },\n  },\n  parameters: {\n    backgrounds: {\n      default: 'dark',\n    },\n  },\n} as Meta;\n\nexport const Light: Story<HeadingProps> = (args) => <Heading {...args} />;\nexport const Dark: Story<HeadingProps> = (args) => <Heading {...args} />;\n\nLight.parameters = {\n  backgrounds: {\n    default: 'light',\n  },\n};\n\nDark.args = {\n  children: 'O texto está claro',\n  colorDark: false,\n};\n","import * as Styled from './styles';\n\nexport type HtmlComponentProps = {\n  html: string;\n};\n\nexport const  HtmlComponent = ({ html }: HtmlComponentProps) => {\n  return <Styled.Container dangerouslySetInnerHTML={{ __html: html }} />;\n};\n","import { Meta, Story } from '@storybook/react/types-6-0';\nimport { HtmlComponent, HtmlComponentProps } from '.';\n\nexport default {\n  title: 'HtmlComponent',\n  component: HtmlComponent,\n  args: {\n    html: `\n    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n    Ullam placeat unde harum. Facilis, quasi delectus\n    obcaecati perferendis nobis alias ad aspernatur quod neque,\n    corporis, aperiam numquam. Sint consequatur omnis voluptate.`,\n  },\n\n} as Meta;\n\nexport const Template: Story<HtmlComponentProps> = (args) => {\n  return (\n    <div>\n      <HtmlComponent {...args} />\n    </div>\n  );\n};\n","import * as Styled from './styles';\nimport { Heading } from '../Heading';\nimport Link from 'next/link';\n\nexport type LogoLinkProps = {\n  text: string;\n  srcImg?: string;\n  link: string;\n  newTab?: boolean;\n};\n\nexport const LogoLink = ({\n  text,\n  srcImg = '',\n  link,\n  newTab = false,\n}: LogoLinkProps) => {\n  const nextLink = link.match(/^\\//) ? true : false;\n  const target = newTab ? '_blank' : '_self';\n\n  if (nextLink) {\n    return (\n      <Heading size=\"small\" uppercase>\n        <Link href={link} passHref>\n          <Styled.Container target={target}>\n            {!!srcImg && <img src={srcImg} alt={text} />}\n            {!srcImg && text}\n          </Styled.Container>\n        </Link>\n      </Heading>\n    );\n  }\n\n  return (\n    <Heading size=\"small\" uppercase>\n      <Styled.Container href={link} target={target}>\n        {!!srcImg && <img src={srcImg} alt={text} />}\n        {!srcImg && text}\n      </Styled.Container>\n    </Heading>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAMA;AAAA;AACA;AACA;AACA;AAAA;AADA;AAIA;AANA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAEA;;;AAUA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AALA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AADA;AAMA;AA/BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;;AAUA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AASA;AAjBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AADA;AADA;AATA;AAgBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AADA;AAMA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAaA;AACA;AACA;AAAA;AAIA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;;;AASA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AADA;AADA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AADA;AAOA;AA9BA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}